<UserControl x:Class="project.View.RegisterUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:project.View"
             xmlns:BE="clr-namespace:BE;assembly=BE"
             xmlns:pl="clr-namespace:project.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="600">
    <UserControl.Resources>
        <pl:CheckToFemaleGenderEnumConverter x:Key="CheckToFemaleGenderEnumConverter"/>
        <pl:CheckToMaleGenderEnumConverter x:Key="CheckToMaleGenderEnumConverter"/>
    </UserControl.Resources>
    <Grid x:Name="myGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="20*"/>
            <RowDefinition Height="113*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="1"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="17*"/>
                <ColumnDefinition Width="68*"/>
                <ColumnDefinition Width="121*"/>
                <ColumnDefinition Width="70*"/>
                <ColumnDefinition Width="44*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="1" Background="Gray"/>
            <Grid Grid.Row="1" Grid.Column="1" Background="Gray"/>
            <Grid Grid.Row="1" Grid.Column="2" Background="Gray"/>
            <Grid Grid.Row="1" Grid.Column="3" Background="Gray"/>
            <Grid Grid.Row="1" Grid.Column="4" Background="Gray"/>
            <Image Source="/images/logo.png" Grid.Column="1"/>
            <Grid Grid.Column="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="11*"/>
                    <RowDefinition Height="6*"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="1" Content="My Food4U Account" Foreground="Gray"/>
            </Grid>
            <Grid Grid.Column="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26*"/>
                    <ColumnDefinition Width="15*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="11*"/>
                </Grid.RowDefinitions>
                <Button Grid.Column="1" Content="x" FontSize="16" Command="{Binding RegisterXCommand}" CommandParameter="{Binding}"> </Button>
            </Grid>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="60*"/>
                <RowDefinition Height="10*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="70*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Label x:Name="label" Content="My Details" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="251" FontSize="16" Foreground="#FF7D7575" FontWeight="Bold" />
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="15*"/>
                        <RowDefinition Height="15*"/>
                        <RowDefinition Height="15*"/>
                        <RowDefinition Height="15*"/>
                        <RowDefinition Height="15*"/>
                        <RowDefinition Height="15*"/>
                        <RowDefinition Height="15*"/>
                        <RowDefinition Height="15*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="137*"/>
                        <ColumnDefinition Width="463*"/>
                    </Grid.ColumnDefinitions>
                    <Label x:Name="labelGender" Content="Gender" HorizontalAlignment="Left" Margin="20,10,0,0" VerticalAlignment="Top" Foreground="#FF7D7575"/>
                    <Label x:Name="labelCurrentWeight" Content="Current Weight" HorizontalAlignment="Left" Margin="20,10,0,0" VerticalAlignment="Top" Grid.Row="4" Foreground="#FF7D7575"/>
                    <Label x:Name="labelDateBirth" Content="Date of Birth" HorizontalAlignment="Left" Margin="20,10,0,0" VerticalAlignment="Top" Grid.Row="1" Foreground="#FF7D7575"/>
                    <Label x:Name="labelEmail" Content="Email Address" HorizontalAlignment="Left" Margin="20,10,0,0" VerticalAlignment="Top" Grid.Row="6" Foreground="#FF7D7575"/>
                    <Label x:Name="labelGoalWeight" Content="Goal Weight" HorizontalAlignment="Left" Margin="20,10,0,0" VerticalAlignment="Top" Grid.Row="5" Foreground="#FF7D7575"/>
                    <Label x:Name="labalPassword" Content="Password" HorizontalAlignment="Left" Margin="20,10,0,0" VerticalAlignment="Top" Grid.Row="7" Foreground="#FF7D7575"/>
                    <Label x:Name="labelFamilyStatus" Content="Family Status" HorizontalAlignment="Left" Margin="20,10,0,0" VerticalAlignment="Top" Grid.Row="2" Foreground="#FF7D7575"/>
                    <Label x:Name="labelHeight" Content="Height" HorizontalAlignment="Left" Margin="20,10,0,0" VerticalAlignment="Top" Grid.Row="3" Foreground="#FF7D7575"/>
                    <Grid Grid.Row="0" Grid.Column="1" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="116*"/>
                            <ColumnDefinition Width="103*"/>
                            <ColumnDefinition Width="244*"/>
                        </Grid.ColumnDefinitions>
                        <RadioButton x:Name="radioButtonFemale" Content="Female" Margin="24,17,0,0"  Grid.Column="0" Foreground="#FF7D7575" IsChecked="{Binding Female, Mode=OneWayToSource, Converter={StaticResource CheckToFemaleGenderEnumConverter}}" />
                        <RadioButton x:Name="radioButtonMale" Content="Male" HorizontalAlignment="Left" Margin="33,17,0,0" Grid.Column="1" Foreground="#FF7D7575" IsChecked="{Binding Male, Mode=OneWayToSource, Converter={StaticResource CheckToMaleGenderEnumConverter}}"/>
                    </Grid>
                    <Grid Grid.Row="4" Grid.Column="1" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="20*"/>
                            <RowDefinition Height="10*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24*"/>
                            <ColumnDefinition Width="113*"/>
                            <ColumnDefinition Width="285*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="textBoxCurrentWeight"  Grid.Column="1" TextWrapping="Wrap"  Grid.Row="1" MaxLength="3">
                            <TextBox.Text>
                                <Binding  Path="CurrentWeightString" Mode="OneWayToSource" >
                                    <Binding.ValidationRules>
                                        <pl:FloatValidationRules/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Label x:Name="labelKgs1" Content="kgs"  Grid.Row="1"  Grid.Column="2" Foreground="#FF7D7575"/>

                    </Grid>
                    <Grid Grid.Row="3" Grid.Column="1" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="20*"/>
                            <RowDefinition Height="10*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24*"/>
                            <ColumnDefinition Width="113*"/>
                            <ColumnDefinition Width="286*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="textBoxHeight" TextWrapping="Wrap" Grid.Column="1"  Grid.Row="1" MaxLength="3">
                            <TextBox.Text>
                                <Binding Path="HeightString" Mode="OneWayToSource" >
                                    <Binding.ValidationRules>
                                        <pl:IntValidationRules/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Label x:Name="labelCm" Content="cm" Grid.Row="1"  Grid.Column="2" Foreground="#FF7D7575"/>
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="1" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="20*"/>
                            <RowDefinition Height="10*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32*"/>
                            <ColumnDefinition Width="150*"/>
                            <ColumnDefinition Width="18*"/>
                            <ColumnDefinition Width="150*"/>
                            <ColumnDefinition Width="18*"/>
                            <ColumnDefinition Width="150*"/>
                            <ColumnDefinition Width="42*"/>
                        </Grid.ColumnDefinitions>

                        <DatePicker x:Name="birthDatePicker" SelectedDate="{Binding Path=BirthDate, Mode=OneWayToSource}" Grid.Row="1" Grid.Column="1" Background="White"  DisplayDateEnd="{Binding Path=MyDisplayDateEnd ,Mode=OneWay}"/>

                    </Grid>
                    <Grid Grid.Row="6" Grid.Column="1" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="20*"/>
                            <RowDefinition Height="10*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="26*"/>
                            <ColumnDefinition Width="403*"/>
                            <ColumnDefinition Width="36*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="textBoxEmail" Grid.Column="1" TextWrapping="Wrap" Grid.Row="1" MaxLength="30">
                            <TextBox.Text>
                                <Binding  Path="EmailAddress" Mode="OneWayToSource" >
                                    <Binding.ValidationRules>
                                        <pl:EmailValidationRules/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                    </Grid>
                    <Grid Grid.Row="5" Grid.Column="1" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="20*"/>
                            <RowDefinition Height="10*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24*"/>
                            <ColumnDefinition Width="113*"/>
                            <ColumnDefinition Width="285*"/>
                        </Grid.ColumnDefinitions>

                        <TextBox x:Name="textBoxGoalWeight" TextWrapping="Wrap" Grid.Column="1" Grid.Row="1" MaxLength="3">
                            <TextBox.Text>
                                <Binding  Path="GoalWeightString" Mode="OneWayToSource" >
                                    <Binding.ValidationRules>
                                        <pl:FloatValidationRules/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Label x:Name="labelKgs2" Content="kgs" Grid.Row="1"  Grid.Column="2" Foreground="#FF7D7575"/>

                    </Grid>
                    <Grid Grid.Column="1" Grid.Row="7">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="20*"/>
                            <RowDefinition Height="10*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="26*"/>
                            <ColumnDefinition Width="127*"/>
                            <ColumnDefinition Width="310*"/>
                        </Grid.ColumnDefinitions>
                        <PasswordBox x:Name="passwordTextBox"  local:PasswordHelper.BindPassword="True" local:PasswordHelper.BoundPassword="{Binding Path=MyPasswordProperty, Mode=OneWayToSource}"  MaxLength="15"  Grid.Row="1" Grid.Column="1"/>
                    </Grid>
                    <Grid Grid.Column="1" Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="20*"/>
                            <RowDefinition Height="10*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="26*"/>
                            <ColumnDefinition Width="127*"/>
                            <ColumnDefinition Width="310*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox x:Name="familyStatusComboBox" Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Path=FamilyStatusLst ,Mode=OneWay}" SelectedItem="{Binding Path=FamilyStatusString, Mode=OneWayToSource}" />
                    </Grid>
                </Grid>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="397*"/>
                    <ColumnDefinition Width="153*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="14*"/>
                    <RowDefinition Height="37*"/>
                    <RowDefinition Height="14*"/>
                </Grid.RowDefinitions>
                <Button x:Name="buttonNext" Content="Next" Grid.Column="1" Grid.Row="1" FontSize="20"  Background="#74d14c" FontWeight="Bold" BorderBrush="#FF7D7575" Command="{Binding ClickCommand}" CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Foreground" Value="White"/>
                            <Style.Triggers >
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=textBoxEmail, Path=Text}" Value="" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=radioButtonFemale, Path=IsChecked}" Value="false"/>
                                        <Condition Binding="{Binding ElementName=radioButtonMale, Path=IsChecked}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=textBoxCurrentWeight, Path=Text}" Value="" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=textBoxHeight, Path=Text}" Value="" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=familyStatusComboBox, Path=SelectedIndex}" Value="-1" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=birthDatePicker, Path=Text}" Value=""/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=textBoxGoalWeight, Path=Text}" Value="" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding MyPasswordProperty}" Value=""/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding  ElementName=textBoxGoalWeight, Path=(Validation.HasError)}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding  ElementName=textBoxHeight, Path=(Validation.HasError)}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding  ElementName=textBoxCurrentWeight, Path=(Validation.HasError)}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding  ElementName=textBoxEmail, Path=(Validation.HasError)}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Button.IsEnabled" Value="false"/>
                                    <Setter Property="Button.Foreground" Value="#ccff99" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Popup Visibility="Visible" Placement="MousePoint" HorizontalAlignment="Center" IsOpen="{Binding ToolTipIsOpenRegisterProperty}" Height="20" Width="250"  >
                    <Border BorderBrush="Gray" BorderThickness="1">
                        <StackPanel Background="LightGray">
                            <TextBlock HorizontalAlignment="Center" Text="{Binding ToolTipTextProperty}"/>
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>
        </Grid>


    </Grid>
</UserControl>
